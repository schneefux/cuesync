import SeratoTrackSerializer from "./SeratoTrackSerializer"

const testId3Tags = {
  "Serato Analysis": "YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gQW5hbHlzaXMAAgE=",
  "Serato Autotags": "YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gQXV0b3RhZ3MAAQExMTUuMDAALTMuMjUxADAuMDAwAA==",
  "Serato BeatGrid": "YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gQmVhdEdyaWQAAQAAAAABPpwoOELmAAAA",
  "Serato Markers2": "YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gTWFya2VyczIAAABBUUZEVlVVQUFBQUFEUUFFQUFHNUdBQUF6QUFBQUFCRFZVVUFBQUFBRFFBRkFBQ2RWd0RNQU13QUFBQkRWVVVBQUFBQURRQUgKQUFLb2R3Q0lBTXd
  /* "Serato Offsets_": "...", */
  /* "Serato Overview": "...", */
}

const testFlacTag = {
  SERATO_ANALYSIS: [ 'YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gQW5hbHlzaXMAAgEA' ],
  SERATO_AUTOGAIN: [
    'YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gQXV0b3RhZ3MAAQE4Ny41MAAtNi44\n' +
      'MjEAMC4wMDAAA'
  ],
  SERATO_BEATGRID: [
    'YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gQmVhdEdyaWQAAQAAAAABAAAAAEKv\n' +
      'AACgA'
  ],
  SERATO_MARKERS_V2: [
    'YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gTWFya2VyczIAAQFBUUZEVDB4UFVn\n' +
      'QUFBQUFFQVAvLy8wTlZSUUFBQUFBTkFBQUFBQlZxQU13QUFBQUFBRU5WUlFBQUFBQU5BQUVB\n' +
      'QWt0T0FBQUEKekFBQUFFSlFUVXhQUTBzQUFBQUFBUUFBAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n' +
      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n' +
      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n' +
      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n' +
      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n' +
      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n' +
      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n' +
      'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n' +
      'AAAAAAAAAAAAAAAAAAAAAA'
  ],
  // SERATO_OVERVIEW: ommitted
  SERATO_PLAYCOUNT: [ '2' ],
  SERATO_RELVOL: [
    'YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gUmVsVm9sQWQAAQEBAAAA'
  ],
  SERATO_VIDEO_ASSOC: [
    'YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gVmlkQXNzb2MAAQEBAAAA'
  ],
}

const serializer = new SeratoTrackSerializer()

test('should deserialize track info from ID3', () => {
  const geobTags = [...Object.values(testId3Tags)]
    .reduce((obj, t, index) => ({ ...obj, [index]: Buffer.from(t, 'base64') }), {})
  const trackInfo = serializer.deserialize(geobTags)

  expect(trackInfo.cues).toMatchObject([
    { index: 4, color: '#00cc00', milliseconds: 112920 },
    { index: 5, color: '#cc00cc', milliseconds: 40279 },
    { index: 7, color: '#8800cc', milliseconds: 174199 },
  ])
})

test('should deserialize track info from FLAC', () => {
  const geobTags = [
    testFlacTag['SERATO_ANALYSIS'],
    testFlacTag['SERATO_AUTOGAIN'],
    testFlacTag['SERATO_BEATGRID'],
    testFlacTag['SERATO_MARKERS_V2'],
    testFlacTag['SERATO_RELVOL'],
    testFlacTag['SERATO_VIDEO_ASSOC'],
  ].reduce((obj, t, index) => ({ ...obj, [index]: Buffer.from(t[0], 'base64') }), {})
  const trackInfo = serializer.deserialize(geobTags)

  expect(trackInfo.cues).toMatchObject([
    { index: 0, color: '#cc0000', milliseconds: 5482 },
    { index: 1, color: '#0000cc', milliseconds: 150350 },
  ])
})

test('should serialize track info', () => {
  const cues = [
    { index: 0, color: '#cc0000', milliseconds: 5482 },
    { index: 1, color: '#0000cc', milliseconds: 150350 },
  ]
  const map = serializer.serialize({ cues })

  // TODO add BPM Lock and other frames
  const expected = 'YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtAABTZXJhdG8gTWFya2VyczIAAABBUUZEVlVVQUFBQUFEUUFBQUFBVmFnRE1BQUFBQUFCRFZVVUFBQUFBRFFBQkFBSkx
  expect(map['Serato Markers2'].toString('base64')).toBe(expected)
})
